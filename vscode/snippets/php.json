{
	"Dump": {
		"prefix": "pre",
		"body": [
			"echo '<pre style=\"color:black;background-color:white;font-family:monospace;font-size:11px;text-align:left;\">';",
			"print_r($1);",
			"echo '</pre>';"
		]
	},
	"Dump and die": {
		"prefix": "predie",
		"body": [
			"echo '<pre style=\"color:black;background-color:white;font-family:monospace;font-size:11px;text-align:left;\">';",
			"print_r($1);",
			"echo '</pre>';",
			"die();"
		]
	},

	// WordPress
	"WP Info: Name": {
		"prefix": "wp:info_name",
		"body": ["bloginfo('name')"]
	},
	"WP Info: URL": {
		"prefix": "wp:info_url",
		"body": ["bloginfo('url')"]
	},
	"WP Info: Template URL": {
		"prefix": "wp:info_tpl_url",
		"body": ["bloginfo('template_url')"]
	},
	"WP Template Path": {
		"prefix": "wp:template_path",
		"description": "Retrieve theme directory URI.",
		"body": ["get_template_directory_uri()"]
	},
	"WP Style Path": {
		"prefix": "wp:stylesheet_path",
		"description": "Retrieve stylesheet directory URI for the current theme/child theme.",
		"body": ["get_stylesheet_directory_uri()"]
	},
	"WP Include Template Part": {
		"prefix": "wp:get_template_part",
		"description": "Loads a template part into a template.",
		"body": ["get_template_part('${1:template-parts}/${2:template-file}')"]
	},
	"WP New Template File": {
		"prefix": "wp:new_template",
		"body": [
			"/**",
			" * Template Name: $1",
			" * Description: $1",
			" */",
			"?>",
			"<?php get_header(); ?>",
			"<?php if (have_posts()) : the_post() ?>",
			"\t$2",
			"<?php endif ?>",
			"<?php get_footer(); ?>"
		]
	},
	"WP Content": {
		"prefix": "wp:content",
		"body": [
			"if (have_posts()) : the_post(); ?>",
			"\t<?php the_content(); ?>",
			"<?php endif ?>"
		]
	},
	"WP Child Page": {
		"prefix": "wp:child_page",
		"body": [
			"$$args = array(",
			"\t'post_type' => 'page',",
			"\t'posts_per_page' => -1,",
			"\t'post_parent'    => $$post->ID,",
			"\t'order'          => 'ASC',",
			"\t'orderby'        => 'menu_order'",
			");",
			"$$parent = new WP_Query( $$args );\n",
			"if ($$parent->have_posts()) :",
			"while ($$parent->have_posts()) : $$parent->the_post();",
			"?>",
			"<h1><?php the_title(); ?></h1>",
			"<?php",
			"endwhile;",
			"endif; wp_reset_postdata();"
		]
	},
<<<<<<< HEAD
=======
	"WP Query Post": {
		"prefix": "wp:query_post",
		"body": [
			"$$paged = (get_query_var('paged')) ? get_query_var('paged') : 1;",
			"$$posts_per_page = get_option('posts_per_page');",
			"$$post_offset = ($paged > 1) ? ($$posts_per_page * ($$paged - 1)) : 0;\n",
			"$$query_args = array(",
			"\t'posts_per_page' => $$posts_per_page,",
			"\t'post_status'    => 'publish',",
			"\t'post_type'      => 'post',",
			"\t'paged'          => $$paged,",
			"\t'offset'         => $$post_offset",
			");",
			"$$articles = new WP_Query($$query_args);",
		]
	},
>>>>>>> 5f157d5 (Update)
	"WP Custom Post Type": {
		"prefix": "wp:custom_post_type",
		"description": "Add new WordPress custom post type",
		"body": [
			"function create_post_types() {",
			"\t$$post_type_name = 'product';\n",
			"\t$$post_type_labels = array(",
			"\t\t'name'          => __( 'Products' ),",
			"\t\t'singular_name' => __( 'Product' )",
			"\t);",
			"\t$$post_type_args = array(",
			"\t\t'labels'        => $$post_type_labels,",
			"\t\t'public'        => true,",
			"\t\t'has_archive'   => true,",
			"\t\t'menu_position' => 20, // below Pages",
			"\t\t'supports'      => array( 'title' ),",
			"\t);\n",
			"\t$$taxonomy_labels = array(",
			"\t\t'name'          => __('Categories'),",
			"\t\t'singular_name' => __('Category'),",
			"\t\t'menu_name'     => __('Categories')",
			"\t);",
			"\t$$taxonomy_args = array(",
			"\t\t'labels'  => $$taxonomy_labels,",
			"\t\t'rewrite' => array( 'slug' => $$post_type_name, 'with_front' => true, 'hierarchical' => false ),",
			"\t);",
			"\tregister_post_type( $$post_type_name, $$post_type_args );",
			"\tregister_taxonomy( $$post_type_name, array( $$post_type_name ) , $$taxonomy_args );",
			"}",
			"add_action( 'init', 'create_post_types' );"
		]
	},
	// ACF
	"WP Option Field": {
		"prefix": "wp:acf_options",
		"body": ["get_field('${1:field_name}', 'option')"]
	},
	"WP Field": {
		"prefix": "wp:acf_field",
		"body": [
			"if (get_field('${1:field_id}')) : ?>",
			"\t<?php echo get_field('${1:field_id}') ?>",
			"<?php endif; ?>"
		]
	},
	"WP ACF Repeater Loop": {
		"prefix": "wp:acf_repeater",
		"body": [
			"if (have_rows('${1:field_id}')) : ?>",
			"<?php while (have_rows('${1:field_id}')) : the_row(); ?>",
			"\t<!-- get_sub_field -->",
			"<?php endwhile; ?>",
			"<?php endif; ?>"
		]
	},
	"WP ACF Sub Field": {
		"prefix": "wp:acf_subfield",
		"body": ["echo get_sub_field('${1:field_id}')"]
	},
	"WP ACF Flexible Content Layout": {
		"prefix": "wp:acf_flexible_layout",
		"body": ["get_row_layout()"]
	},
}
